version: '3.8'

services:
  # Elasticsearch service  
  es-node-01:
    container_name: es-node-01
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - discovery.type=single-node
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.17.0'
    networks:
      - elastic

  # Kibana service              
  kibana-01:
    container_name: kibana-01
    ports:
      - '5601:5601'
    environment:
      - 'ELASTICSEARCH_HOSTS=http://es-node-01:9200'   
    image: 'docker.elastic.co/kibana/kibana:7.17.0'   
    healthcheck:
      test: ["CMD", "curl", "-f", "kibana-01:5601"]
      interval: 50s
      timeout: 50s
      retries: 5
    depends_on:
      - es-node-01
    networks:
      - elastic 

  # Logstash service 
  logstash:
    container_name: logstash-01
    volumes:
      - 'C:\Users\kolarik\Desktop\elk\rean-devops-main\rean-devops-main\elasticsearch\logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro'
      - 'C:\Users\kolarik\Desktop\elk\rean-devops-main\rean-devops-main\elasticsearch\logstash.yaml:/usr/share/logstash/config/logstash.yml:ro'
    image: 'docker.elastic.co/logstash/logstash:7.16.3'
    depends_on:   
      kibana-01:
        condition: service_healthy  
    networks:
      - elastic 

  # Filebeat service 
  filebeat:
    user: root
    container_name: filebeat-01
    command: --strict.perms=false
    volumes:
        - 'C:\Users\kolarik\Desktop\elk\rean-devops-main\rean-devops-main\elasticsearch\filebeat.docker.yaml:/usr/share/filebeat/filebeat.yml:ro'
        - '/var/lib/docker/containers:/var/lib/docker/containers:ro'
        - '/var/run/docker.sock:/var/run/docker.sock:ro'
    image: 'docker.elastic.co/beats/filebeat:7.16.3'
    depends_on:   
      kibana-01:
        condition: service_healthy
    networks:
        - elastic
       
networks:
  elastic:
    name: elastic
